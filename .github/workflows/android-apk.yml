name: Android APK

on:
  push:
    branches: [ main ]
    paths:
      - 'android/**'
      - '.github/workflows/android-apk.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'android/**'
      - '.github/workflows/android-apk.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      JAVA_VERSION: '17'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7

      - name: Generate Gradle wrapper (if missing)
        working-directory: android
        run: |
          if [ ! -f gradlew ] || [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then
            echo "Generating Gradle wrapper..."
            gradle wrapper --gradle-version 8.7
          else
            echo "Gradle wrapper already present."
          fi

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Build Debug APK
        working-directory: android
        run: ./gradlew assembleDebug --stacktrace

      - name: Build Release APK (unsigned)
        working-directory: android
        run: ./gradlew assembleRelease --stacktrace

      - name: Upload APK Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: surfscape-apks
          path: |
            android/app/build/outputs/apk/debug/*.apk
            android/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      - name: Prepare Keystore
        id: prep_keystore
        env:
          KEYSTORE_B64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          set -e
          mkdir -p keystore
          if [ -n "${KEYSTORE_B64}" ] && [ -n "${KEY_ALIAS}" ]; then
            echo "Using provided production keystore" 
            echo "$KEYSTORE_B64" | base64 -d > keystore/release.jks
            echo "prod=true" >> $GITHUB_OUTPUT
            echo "alias=$KEY_ALIAS" >> $GITHUB_OUTPUT
            echo "storepass=$KEYSTORE_PASSWORD" >> $GITHUB_OUTPUT
            echo "keypass=$KEY_PASSWORD" >> $GITHUB_OUTPUT
          else
            echo "Generating deterministic CI keystore (NOT for production)"
            KEY_ALIAS=surfscapeCI
            KEYSTORE_PASSWORD=ci_password
            KEY_PASSWORD=ci_password
            keytool -genkeypair -v -storetype JKS -keystore keystore/release.jks \
              -storepass "$KEYSTORE_PASSWORD" -keypass "$KEY_PASSWORD" -alias "$KEY_ALIAS" \
              -dname "CN=Surfscape CI,O=Surfscape,L=CI,ST=None,C=US" \
              -keyalg RSA -keysize 2048 -validity 365
            echo "prod=false" >> $GITHUB_OUTPUT
            echo "alias=$KEY_ALIAS" >> $GITHUB_OUTPUT
            echo "storepass=$KEYSTORE_PASSWORD" >> $GITHUB_OUTPUT
            echo "keypass=$KEY_PASSWORD" >> $GITHUB_OUTPUT
          fi
          echo "path=$(pwd)/keystore/release.jks" >> $GITHUB_OUTPUT

      - name: Build Signed Release APK
        if: ${{ always() }}
        working-directory: android
        env:
          SURFSCAPE_KEYSTORE_PATH: ${{ steps.prep_keystore.outputs.path }}
          SURFSCAPE_KEYSTORE_PASSWORD: ${{ steps.prep_keystore.outputs.storepass }}
          SURFSCAPE_KEY_ALIAS: ${{ steps.prep_keystore.outputs.alias }}
          SURFSCAPE_KEY_PASSWORD: ${{ steps.prep_keystore.outputs.keypass }}
        run: |
          ./gradlew clean assembleRelease --stacktrace
          ls -1 app/build/outputs/apk/release

      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: surfscape-apk-signed
          path: android/app/build/outputs/apk/release/app-release.apk
          if-no-files-found: error
