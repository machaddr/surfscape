name: android-apk

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up Java (Android build)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK components
        run: |
          yes | sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0" \
               "ndk;27.1.12297006" "cmake;3.30.5"

      - name: Install Qt (host tools + Android) via aqtinstall
        run: |
          pip install "aqtinstall>=3.1.0"
          QT_VERSION=6.7.3
          # Desktop (gcc_64) is required for host tools used by pyside6-android-deploy (e.g., rcc, lrelease).
          aqt install-qt linux desktop "$QT_VERSION" linux_gcc_64 --outputdir /opt/Qt
          # Android target (ARM64)
          aqt install-qt linux android "$QT_VERSION" android_arm64_v8a --outputdir /opt/Qt

      - name: Install PySide6 tooling
        run: |
          pip install "PySide6==6.7.3" "PySide6-Addons==6.7.3" "shiboken6==6.7.3"

      - name: Build APK (PySide6 Android deploy)
        working-directory: android
        run: |
          export ANDROID_NDK_ROOT="$ANDROID_SDK_ROOT/ndk/27.1.12297006"
          export QT_ANDROID_DIR="/opt/Qt/6.7.3/android_arm64_v8a"
          export QT_HOST_PATH="/opt/Qt/6.7.3/gcc_64"
          export PATH="$QT_HOST_PATH/bin:$PATH"
          pyside6-android-deploy \
            -f \
            --name "Surfscape" \
            --sdk-path "$ANDROID_SDK_ROOT" \
            --ndk-path "$ANDROID_NDK_ROOT" \
            --qt-host-path "$QT_HOST_PATH" \
            --qt-target-path "$QT_ANDROID_DIR" \
            --keep-deployment-files \
            -v
          echo "APK artifacts:" && find . -name "*.apk" -o -name "*.aab"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: surfscape-android
          path: |
            **/*.apk
            **/*.aab
