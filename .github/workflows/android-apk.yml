name: android-apk

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up Java (Android build)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK components
        run: |
          yes | sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0" \
               "ndk;27.1.12297006" "cmake;3.30.5"

      - name: Install Qt (host tools + Android) via aqtinstall
        run: |
          python -m pip install "aqtinstall>=3.1.0"

          # Desktop (gcc_64) is required for host tools used by pyside6-android-deploy (e.g., rcc, lrelease).
          python -m aqt install-qt linux desktop --outputdir /opt/Qt

          # Install the Qt for Android kit for arm64-v8a so deploy can link the correct Android libs.
          python -m aqt install-qt linux android android_arm64_v8a --outputdir /opt/Qt

      - name: Install PySide6 tooling
        run: |
          pip install PySide6 PySide6-Addons shiboken6

      - name: Install PySide6 Android deploy requirements
        run: |
          python -m pip install jinja2 pkginfo tqdm "packaging==24.1"

      - name: Build APK (PySide6 Android deploy)
        working-directory: android
        run: |
          export ANDROID_NDK_ROOT="$ANDROID_SDK_ROOT/ndk/27.1.12297006"
          export QT_HOST_PATH="/opt/Qt/6.6.3/gcc_64"
          export PATH="$QT_HOST_PATH/bin:$PATH"

          # Download Android wheels for PySide6 Addons and shiboken6 matching Python 3.11 (android_aarch64)
          mkdir -p dist-wheels
          python -m pip download --only-binary=:all: --no-deps -d dist-wheels \
            PySide6-Addons shiboken6
          WHEEL_PYSIDE=$(ls dist-wheels/pyside6_addons-*.whl | head -n1)
          WHEEL_SHIBOKEN=$(ls dist-wheels/shiboken6-*.whl | head -n1)
          if [ ! -f "$WHEEL_PYSIDE" ] || [ ! -f "$WHEEL_SHIBOKEN" ]; then
            echo "Failed to download required Android wheels" >&2
            ls -l dist-wheels || true
            exit 2
          fi
          pyside6-android-deploy \
            -f \
            --name "Surfscape" \
            --sdk-path "$ANDROID_SDK_ROOT" \
            --ndk-path "$ANDROID_NDK_ROOT" \
            --wheel-pyside "$WHEEL_PYSIDE" \
            --wheel-shiboken "$WHEEL_SHIBOKEN" \
            --keep-deployment-files \
            -v
          echo "APK artifacts:" && find . -name "*.apk" -o -name "*.aab"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: surfscape-android
          path: |
            **/*.apk
            **/*.aab
